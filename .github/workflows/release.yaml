on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  releases-hello:
    name: Release Hello Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [windows]
        goarch: [amd64, "386"]
    steps:
      - name: Get Release Info
        run: |
          {
            echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}"
            echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}"
            echo "OS_NAME=${{ matrix.goos }}"
          } >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.40
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.21.0
          binary_name: "hello"
          compress_assets: off
          md5sum: false
          asset_name: "hello_${{ env.RELEASE_TAG }}_${{ env.OS_NAME }}_${{ matrix.goarch }}"
          pre_command: go get github.com/akavel/rsrc&&go install github.com/akavel/rsrc&&rsrc -arch ${{ matrix.goarch }} -ico ./build/logo.ico -o resources.syso&&apt-get update && apt-get install -y mingw-w64 && if [ "${{ matrix.goarch }}" = "amd64" ]; then export CC=x86_64-w64-mingw32-gcc; else export CC=i686-w64-mingw32-gcc; fi && env && export CGO_ENABLED=1
          ldflags: "-extldflags -static -H windowsgui -s -w"

  releases-ts:
    name: Release Ts Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [windows, linux]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - name: Get Release Info
        run: |
          {
            echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}"
            echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}"
            echo "OS_NAME=${{ matrix.goos }}"
          } >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.21.0
          binary_name: "ts"
          project_path: "./ts"
          compress_assets: off
          md5sum: false
          asset_name: "ts_${{ env.RELEASE_TAG }}_${{ env.OS_NAME }}_${{ matrix.goarch }}"